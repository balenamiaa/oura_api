# NOTE: This file is auto generated by OpenAPI Generator 7.5.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule OuraApi.Api.WebhookSubscriptionRoutes do
  @moduledoc """
  API calls for all endpoints tagged `WebhookSubscriptionRoutes`.
  """

  alias OuraApi.Connection
  import OuraApi.RequestBuilder

  @doc """
  Create Webhook Subscription

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `create_webhook_subscription_request` (CreateWebhookSubscriptionRequest):
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, OuraApi.Model.WebhookSubscriptionModel.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_webhook_subscription_v2_webhook_subscription_post(Tesla.Env.client, OuraApi.Model.CreateWebhookSubscriptionRequest.t, keyword()) :: {:ok, OuraApi.Model.HttpValidationError.t} | {:ok, OuraApi.Model.WebhookSubscriptionModel.t} | {:error, Tesla.Env.t}
  def create_webhook_subscription_v2_webhook_subscription_post(connection, create_webhook_subscription_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/v2/webhook/subscription")
      |> add_param(:body, :body, create_webhook_subscription_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, OuraApi.Model.WebhookSubscriptionModel},
      {422, OuraApi.Model.HttpValidationError}
    ])
  end

  @doc """
  Delete Webhook Subscription

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `id` (String.t):
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delete_webhook_subscription_v2_webhook_subscription_id_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, OuraApi.Model.HttpValidationError.t} | {:error, Tesla.Env.t}
  def delete_webhook_subscription_v2_webhook_subscription_id_delete(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/v2/webhook/subscription/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {403, false},
      {422, OuraApi.Model.HttpValidationError}
    ])
  end

  @doc """
  Get Webhook Subscription

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `id` (String.t):
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, OuraApi.Model.WebhookSubscriptionModel.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_webhook_subscription_v2_webhook_subscription_id_get(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, OuraApi.Model.HttpValidationError.t} | {:ok, OuraApi.Model.WebhookSubscriptionModel.t} | {:error, Tesla.Env.t}
  def get_webhook_subscription_v2_webhook_subscription_id_get(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v2/webhook/subscription/#{id}")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, OuraApi.Model.WebhookSubscriptionModel},
      {403, false},
      {422, OuraApi.Model.HttpValidationError}
    ])
  end

  @doc """
  List Webhook Subscriptions

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, [%WebhookSubscriptionModel{}, ...]}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec list_webhook_subscriptions_v2_webhook_subscription_get(Tesla.Env.client, keyword()) :: {:ok, list(OuraApi.Model.WebhookSubscriptionModel.t)} | {:error, Tesla.Env.t}
  def list_webhook_subscriptions_v2_webhook_subscription_get(connection, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/v2/webhook/subscription")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, OuraApi.Model.WebhookSubscriptionModel}
    ])
  end

  @doc """
  Renew Webhook Subscription

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `id` (String.t):
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, OuraApi.Model.WebhookSubscriptionModel.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec renew_webhook_subscription_v2_webhook_subscription_renew_id_put(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, OuraApi.Model.HttpValidationError.t} | {:ok, OuraApi.Model.WebhookSubscriptionModel.t} | {:error, Tesla.Env.t}
  def renew_webhook_subscription_v2_webhook_subscription_renew_id_put(connection, id, _opts \\ []) do
    request =
      %{}
      |> method(:put)
      |> url("/v2/webhook/subscription/renew/#{id}")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, OuraApi.Model.WebhookSubscriptionModel},
      {403, false},
      {422, OuraApi.Model.HttpValidationError}
    ])
  end

  @doc """
  Update Webhook Subscription

  ### Parameters

  - `connection` (OuraApi.Connection): Connection to server
  - `id` (String.t):
  - `update_webhook_subscription_request` (UpdateWebhookSubscriptionRequest):
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, OuraApi.Model.WebhookSubscriptionModel.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec update_webhook_subscription_v2_webhook_subscription_id_put(Tesla.Env.client, String.t, OuraApi.Model.UpdateWebhookSubscriptionRequest.t, keyword()) :: {:ok, nil} | {:ok, OuraApi.Model.HttpValidationError.t} | {:ok, OuraApi.Model.WebhookSubscriptionModel.t} | {:error, Tesla.Env.t}
  def update_webhook_subscription_v2_webhook_subscription_id_put(connection, id, update_webhook_subscription_request, _opts \\ []) do
    request =
      %{}
      |> method(:put)
      |> url("/v2/webhook/subscription/#{id}")
      |> add_param(:body, :body, update_webhook_subscription_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, OuraApi.Model.WebhookSubscriptionModel},
      {403, false},
      {422, OuraApi.Model.HttpValidationError}
    ])
  end
end
